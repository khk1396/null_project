<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="marketMapper">
	<select id="selectAllProducts" resultType="Product">
		SELECT REGIST_PRODUCT_ID "PRODUCT_ID", REGIST_USER_PK "USER_PK", PRODUCT_NAME, PRODUCT_DESCRIPTION, PRODUCT_PRICE, PRODUCT_IMG, REGIST_COMMENT 
		FROM TRADE T 
		JOIN PRODUCT ON PRODUCT_ID = REGIST_PRODUCT_ID 
		JOIN PRODUCT_DETAIL USING (PRODUCT_SN) 
		WHERE T.STATUS = 'STAY' AND APPLY_PRODUCT_ID IS NULL
	</select>

	<select id="selectMyAllProducts" resultType="Product">
		SELECT PRODUCT_ID, PRODUCT_NAME, PRODUCT_DESCRIPTION, PRODUCT_IMG 
		FROM PRODUCT 
		JOIN PRODUCT_DETAIL USING(PRODUCT_SN) 
		WHERE USER_PK = #{userPk} AND STATUS = 'HAVE'
	</select>
	
	<select id="insertTradeRegist">
		INSERT INTO TRADE (TRADE_ID, REGIST_USER_PK, REGIST_PRODUCT_ID, REGIST_COMMENT) VALUES (SEQ_TRADE_ID.NEXTVAL, #{userPk}, #{productId}, #{registComment})
	</select>
	
	<select id="selectMyRegistedProducts" resultType="Product">
		SELECT REGIST_USER_PK "USER_PK", REGIST_PRODUCT_ID "PRODUCT_ID", REGIST_DATE "GET_DATE", REGIST_COMMENT, PRODUCT_NAME, PRODUCT_PRICE, REGIST_COMMENT, PRODUCT_IMG, TRADE_ID 
		FROM TRADE T 
		JOIN PRODUCT ON REGIST_PRODUCT_ID = PRODUCT_ID 
		JOIN PRODUCT_DETAIL USING (PRODUCT_SN) 
		WHERE REGIST_USER_PK = #{userPk} AND T.STATUS = 'STAY' AND APPLY_USER_PK IS NULL
	</select>
	
	<select id="selectAppliedProducts" resultType="Product">
		SELECT REGIST_PRODUCT_ID "OTHER_PRODUCT_ID",APPLY_USER_PK "USER_PK", APPLY_PRODUCT_ID "PRODUCT_ID", APPLY_DATE "GET_DATE", APPLY_COMMENT "REGIST_COMMENT", PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_IMG, TRADE_ID 
		FROM TRADE T 
		JOIN PRODUCT ON APPLY_PRODUCT_ID = PRODUCT_ID 
		JOIN PRODUCT_DETAIL USING (PRODUCT_SN) 
		WHERE REGIST_USER_PK = #{userPk} AND T.STATUS = 'STAY'
	</select>
	
	<select id="selectIAppliedProducts" resultType="Product">
		SELECT APPLY_USER_PK "USER_PK", APPLY_PRODUCT_ID "PRODUCT_ID", APPLY_DATE "GET_DATE", APPLY_COMMENT "REGIST_COMMENT", PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_IMG, TRADE_ID 
		FROM TRADE T 
		JOIN PRODUCT ON APPLY_PRODUCT_ID = PRODUCT_ID 
		JOIN PRODUCT_DETAIL USING (PRODUCT_SN) 
		WHERE APPLY_USER_PK = #{userPk} AND T.STATUS = 'STAY' 
		ORDER BY TRADE_ID
	</select>
	
	<select id="selectMyWantedProducts" resultType="Product">
		SELECT REGIST_USER_PK "USER_PK", REGIST_PRODUCT_ID "PRODUCT_ID", REGIST_DATE "GET_DATE", REGIST_COMMENT, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_IMG, TRADE_ID 
		FROM TRADE T 
		JOIN PRODUCT ON REGIST_PRODUCT_ID = PRODUCT_ID 
		JOIN PRODUCT_DETAIL USING (PRODUCT_SN) 
		WHERE APPLY_USER_PK = #{userPk} AND T.STATUS = 'STAY'
		ORDER BY TRADE_ID
	</select>
	
	<select id="registProductList" resultType="Trade">
		SELECT RP.PRODUCT_ID "myProductId", RPD.PRODUCT_NAME "myProductName", RPD.PRODUCT_PRICE "myProductPrice", RPD.PRODUCT_IMG "myProductImg", T.REGIST_COMMENT "myComment", T.REGIST_DATE "tradeDate", 
    	AP.PRODUCT_ID "otherProductId", APD.PRODUCT_NAME "otherProductName", APD.PRODUCT_PRICE "otherProductPrice", APD.PRODUCT_IMG "otherProductImg"
		FROM TRADE T
		JOIN PRODUCT RP ON RP.PRODUCT_ID = T.REGIST_PRODUCT_ID
		JOIN PRODUCT_DETAIL RPD ON RP.PRODUCT_SN = RPD.PRODUCT_SN 
		LEFT JOIN PRODUCT AP ON AP.PRODUCT_ID = T.APPLY_PRODUCT_ID
		LEFT JOIN PRODUCT_DETAIL APD ON AP.PRODUCT_SN = APD.PRODUCT_SN
		WHERE T.REGIST_USER_PK = #{userPk} 
		AND T.STATUS = 'ACCEPT'
	</select>
	
	<select id="applyProductList" resultType="Trade">
		SELECT 
    	RP.PRODUCT_ID "otherProductId", RPD.PRODUCT_NAME "otherProductName", RPD.PRODUCT_PRICE "otherProductPrice", RPD.PRODUCT_IMG "otherProductImg", T.REGIST_DATE "tradeDate", 
    	AP.PRODUCT_ID "myProductId", APD.PRODUCT_NAME "myProductName", APD.PRODUCT_PRICE "myProductPrice", APD.PRODUCT_IMG "myProductImg", T.APPLY_COMMENT "myComment"
		FROM TRADE T
		JOIN PRODUCT RP ON RP.PRODUCT_ID = T.REGIST_PRODUCT_ID
		JOIN PRODUCT_DETAIL RPD ON RP.PRODUCT_SN = RPD.PRODUCT_SN 
		LEFT JOIN PRODUCT AP ON AP.PRODUCT_ID = T.APPLY_PRODUCT_ID
		LEFT JOIN PRODUCT_DETAIL APD ON AP.PRODUCT_SN = APD.PRODUCT_SN
		WHERE T.APPLY_USER_PK = #{userPk} 
		AND T.STATUS = 'ACCEPT' 
	</select>
	
	<select id="selectProductDetail" resultType="Product">
		SELECT PRODUCT_ID, USER_PK, PRODUCT_NAME, PRODUCT_DESCRIPTION, PRODUCT_PRICE, PRODUCT_IMG 
		FROM PRODUCT JOIN PRODUCT_DETAIL USING (PRODUCT_SN) 
		WHERE PRODUCT_ID = #{productId}
	</select>
	
	<update id="updateCancelApply">
		DELETE TRADE 
		WHERE APPLY_PRODUCT_ID = #{productId}
	</update>
	
	<update id="updateStatusToTrade">
		UPDATE PRODUCT SET STATUS = 'TRADE' WHERE PRODUCT_ID = #{myProductId}
	</update>
	
	<update id="updateStatusToHave">
		UPDATE PRODUCT SET STATUS = 'HAVE' WHERE PRODUCT_ID = #{productId}
	</update>
	
	<update id="updateTradeStatusToAccept">
		UPDATE TRADE SET STATUS = 'ACCEPT' 
		WHERE REGIST_PRODUCT_ID = #{productId} AND APPLY_PRODUCT_ID = #{otherProductId}
	</update>
	
	<update id="updateProductOwner">
		UPDATE PRODUCT SET USER_PK = #{userPk}, FORTUNE = '저장된 운세가 없습니다.', DIARY = '저장된 다이어리가 없습니다.', GET_DATE = SYSDATE, STATUS = 'HAVE' 
		WHERE PRODUCT_ID = #{otherProductId}
	</update>
	
	<update id="updateRejectApply">
		DELETE TRADE 
		WHERE REGIST_PRODUCT_ID = #{productId} AND APPLY_PRODUCT_ID = #{otherProductId}
	</update>
	
	<select id="selectTradeInfo" resultType="Trade">
		SELECT REGIST_USER_PK "OTHER_PRODUCT_USER_PK", REGIST_PRODUCT_ID "OTHER_PRODUCT_ID", REGIST_DATE "TRADE_DATE", REGIST_COMMENT "OTHER_COMMENT" FROM TRADE 
		WHERE REGIST_PRODUCT_ID = #{selectProductId} AND APPLY_PRODUCT_ID IS NULL
	</select>
	
	<insert id="insertTradeApply">
		INSERT INTO TRADE (TRADE_ID, REGIST_USER_PK, REGIST_PRODUCT_ID, REGIST_DATE, REGIST_COMMENT, APPLY_USER_PK, APPLY_PRODUCT_ID, APPLY_COMMENT) VALUES 
		(SEQ_TRADE_ID.NEXTVAL, #{otherProductUserPk}, #{otherProductId}, #{tradeDate}, #{otherComment}, #{myProductUserPk}, #{myProductId}, #{myComment})
	</insert>
	
	<delete id="deleteOtherApply">
		DELETE TRADE WHERE REGIST_PRODUCT_ID = #{productId} AND STATUS = 'STAY'
	</delete>
	
	<update id="updateOtherStatus">
		UPDATE PRODUCT SET STATUS = 'HAVE' 
		WHERE PRODUCT_ID IN(SELECT APPLY_PRODUCT_ID FROM TRADE 
		WHERE REGIST_PRODUCT_ID = #{productId} AND APPLY_PRODUCT_ID != #{otherProductId})
	</update>
	
</mapper>
